version: '3.8'

services:
  # Frontend Service
  frontend:
    build: 
      context: ./frontend
      target: runner
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:5000/api
      - NEXT_PUBLIC_SOCKET_URL=http://backend:5000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - task-manager-network

  # Backend Service
  backend:
    build: 
      context: ./backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/task-manager
      - JWT_SECRET=your-jwt-secret-key-here-at-least-32-characters-long
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - task-manager-network

  # Database Service
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./backend/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - task-manager-network
    command: --quiet

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - task-manager-network

volumes:
  mongo_data:

networks:
  task-manager-network:
    driver: bridge
